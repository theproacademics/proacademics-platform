/* MathLive Virtual Keyboard Z-Index Fixes */

/* Ensure MathLive virtual keyboard appears above all dialogs and modals */
.ML__virtual-keyboard {
  z-index: 999999 !important;
  position: fixed !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  max-height: 50vh !important;
  overflow-y: auto !important;
}

/* When keyboard is open, allow page to scroll */
body:has(.ML__virtual-keyboard) {
  overflow: auto !important;
  height: auto !important;
  padding-bottom: 50vh !important;
  position: relative !important;
}

/* Ensure the main page content can scroll when keyboard is open */
body:has(.ML__virtual-keyboard) .main-content,
body:has(.ML__virtual-keyboard) main,
body:has(.ML__virtual-keyboard) [data-main-content],
body:has(.ML__virtual-keyboard) .admin-content,
body:has(.ML__virtual-keyboard) [data-admin-content] {
  overflow: auto !important;
  max-height: calc(100vh - 50vh) !important;
  padding-bottom: 20px !important;
}

/* Fix admin homework page scrolling when keyboard is open */
body:has(.ML__virtual-keyboard) .admin-homework-page {
  overflow: auto !important;
  max-height: calc(100vh - 50vh) !important;
  padding-bottom: 20px !important;
}

/* Ensure the entire page can scroll when keyboard is open */
body:has(.ML__keyboard:not([style*="display: none"])) {
  overflow: auto !important;
  height: auto !important;
  max-height: none !important;
  position: relative !important;
}

/* Force page scrolling when keyboard is visible */
body:has(.ML__keyboard:not([style*="display: none"])) html {
  overflow: auto !important;
  height: auto !important;
}

/* Alternative selector for keyboard visibility */
body:has(.ML__virtual-keyboard) {
  overflow: auto !important;
  height: auto !important;
  max-height: none !important;
  position: relative !important;
}

body:has(.ML__virtual-keyboard) html {
  overflow: auto !important;
  height: auto !important;
}

/* Make sure the main container can scroll */
body:has(.ML__keyboard:not([style*="display: none"])) .admin-homework-page {
  overflow-y: auto !important;
  max-height: calc(100vh - 50vh) !important;
  position: relative !important;
}

/* Ensure admin content container can scroll */
body:has(.ML__keyboard:not([style*="display: none"])) .admin-content {
  overflow-y: auto !important;
  max-height: calc(100vh - 50vh) !important;
  position: relative !important;
}

/* Ensure dialog can scroll when keyboard is open */
[data-radix-dialog-content] {
  overflow-y: auto !important;
  max-height: calc(100vh - 100px) !important;
}

/* When keyboard is visible, adjust dialog position */
body:has(.ML__keyboard:not([style*="display: none"])) [data-radix-dialog-content] {
  transform: translateY(-35vh) !important;
  transition: transform 0.3s ease !important;
  max-height: calc(100vh - 65vh) !important;
  overflow-y: auto !important;
  position: relative !important;
  z-index: 1000 !important;
}

/* Specific adjustments for admin homework dialogs */
body:has(.ML__keyboard:not([style*="display: none"])) .admin-homework-page [data-radix-dialog-content] {
  transform: translateY(-40vh) !important;
  max-height: calc(100vh - 70vh) !important;
}

/* Make dialogs more scrollable when keyboard is open */
body.keyboard-open [data-radix-dialog-content] {
  max-height: calc(100vh - 40vh) !important;
  overflow-y: auto !important;
  transform: translateY(-25vh) !important;
  margin-top: -50px !important;
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) translateY(-25vh) !important;
  z-index: 1001 !important;
}

/* Ensure input fields are visible when keyboard is open */
body:has(.ML__keyboard:not([style*="display: none"])) math-field {
  margin-bottom: 20px !important;
}

.ML__virtual-keyboard-container {
  z-index: 999999 !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

.ML__virtual-keyboard-backdrop {
  z-index: 999998 !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

.ML__keyboard {
  z-index: 1000000 !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

/* Override any conflicting z-index from Radix UI dialogs */
[data-radix-dialog-content] {
  z-index: 10 !important;
}

/* Ensure dialog backdrop is below keyboard */
[data-radix-dialog-overlay] {
  z-index: 5 !important;
}

/* Ensure MathLive elements are above dialog content */
.ML__mathfield {
  z-index: 1 !important;
}

/* Virtual keyboard panel specific styling */
.ML__keyboard-panel {
  z-index: 100001 !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

/* MathLive popup elements */
.ML__popover {
  z-index: 100002 !important;
}

/* Ensure proper layering for all MathLive components */
.ML__virtual-keyboard * {
  z-index: inherit !important;
}

/* Force keyboard to stay visible */
.ML__virtual-keyboard[style*="display: none"] {
  display: block !important;
  visibility: visible !important;
}

.ML__virtual-keyboard[style*="visibility: hidden"] {
  display: block !important;
  visibility: visible !important;
}

/* Prevent keyboard from closing when clicked */
.ML__virtual-keyboard,
.ML__keyboard,
.ML__keyboard-panel {
  pointer-events: auto !important;
  user-select: none !important;
}

/* Ensure keyboard buttons work properly */
.ML__keyboard button,
.ML__keyboard .ML__keyboard-key {
  pointer-events: auto !important;
  cursor: pointer !important;
}

/* Prevent dialog from interfering with keyboard */
[data-radix-dialog-content] {
  z-index: 50 !important;
}

/* Ensure keyboard is always on top but doesn't cover entire screen */
.ML__virtual-keyboard {
  z-index: 999999 !important;
  position: fixed !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  width: 100% !important;
  height: auto !important;
  max-height: 50vh !important;
}

.ML__keyboard,
.ML__keyboard-panel,
.ML__virtual-keyboard-container {
  z-index: 999999 !important;
  position: relative !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

/* Force keyboard to appear above everything */
.ML__virtual-keyboard * {
  z-index: 999999 !important;
  position: relative !important;
}

/* Override any dialog z-index */
[role="dialog"] {
  z-index: 10 !important;
}

/* Ensure keyboard backdrop is above dialog */
.ML__virtual-keyboard-backdrop {
  z-index: 999998 !important;
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
}

/* Force all MathLive elements to appear above everything */
.ML__virtual-keyboard,
.ML__keyboard,
.ML__keyboard-panel,
.ML__virtual-keyboard-container,
.ML__virtual-keyboard-backdrop {
  z-index: 999999 !important;
  position: fixed !important;
  display: block !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

/* Override any potential conflicts */
body .ML__virtual-keyboard,
body .ML__keyboard,
body .ML__keyboard-panel {
  z-index: 999999 !important;
  position: fixed !important;
}

/* Ensure cursor is visible in MathField */
math-field {
  caret-color: #3b82f6 !important;
  cursor: text !important;
  font-family: system-ui, -apple-system, sans-serif !important;
  font-style: normal !important;
  font-weight: normal !important;
}

/* Fix font style for all MathLive elements */
math-field *,
.ML__text,
.ML__mathfield,
.ML__mathfield *,
.ML__base,
.ML__mathit,
.ML__mathrm,
.ML__mathbf {
  font-family: system-ui, -apple-system, sans-serif !important;
  font-style: normal !important;
  font-weight: normal !important;
}

/* Override math italic styles */
math-field .ML__mathit {
  font-style: normal !important;
}

/* Force normal text rendering */
math-field [data-mode="text"] {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
}

/* Override any computed styles */
math-field span[style*="font-style: italic"] {
  font-style: normal !important;
}

/* Force all text to be non-italic */
math-field span,
math-field .ML__text-wrapper,
math-field .ML__text-container,
math-field .ML__text,
math-field .ML__base,
math-field .ML__mathit,
math-field .ML__mathrm,
math-field .ML__mathbf,
math-field .ML__text-mode,
math-field .ML__text-mode *,
math-field [data-mode="text"],
math-field [data-mode="text"] * {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
  font-weight: normal !important;
}

/* Override MathLive's default text mode */
math-field[mode="text"] *,
math-field .ML__text-mode * {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
}

/* Force all content to be non-italic */
math-field * {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
}

/* Override any dynamic styling that might be applied */
math-field [style*="font-style: italic"],
math-field [style*="font-style:italic"],
math-field .ML__text[style*="font-style"],
math-field .ML__base[style*="font-style"],
math-field .ML__mathit[style*="font-style"] {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
}

/* Force normal font on any dynamically created elements */
math-field *::before,
math-field *::after {
  font-style: normal !important;
  font-family: system-ui, -apple-system, sans-serif !important;
}

/* Force dialog scroll when keyboard is open */
.ML__keyboard:not([style*="display: none"]) ~ * [data-radix-dialog-content] {
  max-height: calc(100vh - 400px) !important;
  overflow-y: auto !important;
}

/* Global override for when keyboard is visible */
.ML__keyboard:not([style*="display: none"]) {
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 999999 !important;
}

/* Force scrolling when keyboard is present - more aggressive approach */
body.keyboard-open {
  overflow: auto !important;
  height: auto !important;
  max-height: none !important;
  position: static !important;
}

body.keyboard-open html {
  overflow: auto !important;
  height: auto !important;
}

body.keyboard-open .admin-homework-page,
body.keyboard-open .admin-content {
  overflow-y: auto !important;
  max-height: none !important;
  height: auto !important;
}

body.keyboard-open [data-radix-dialog-content] {
  overflow-y: auto !important;
  max-height: calc(100vh - 60vh) !important;
  transform: translateY(-30vh) !important;
  position: relative !important;
  z-index: 1000 !important;
  margin-top: -100px !important;
}

/* Make the page much more scrollable when keyboard is open */
body.keyboard-open {
  height: calc(100vh + 50vh) !important;
  min-height: calc(100vh + 50vh) !important;
  overflow-y: scroll !important;
  -webkit-overflow-scrolling: touch !important;
}

html.keyboard-open {
  height: calc(100vh + 50vh) !important;
  min-height: calc(100vh + 50vh) !important;
  overflow-y: scroll !important;
  -webkit-overflow-scrolling: touch !important;
}

body.keyboard-open .admin-homework-page {
  height: calc(100vh + 50vh) !important;
  min-height: calc(100vh + 50vh) !important;
  overflow-y: scroll !important;
  padding-bottom: 50vh !important;
  position: static !important; /* allow page scroll instead of pinned absolute */
  -webkit-overflow-scrolling: touch !important;
}

body.keyboard-open .admin-content {
  height: calc(100vh + 50vh) !important;
  min-height: calc(100vh + 50vh) !important;
  overflow-y: scroll !important;
  padding-bottom: 50vh !important;
  position: static !important; /* was absolute inset-0; let page scroll */
  -webkit-overflow-scrolling: touch !important;
}

/* Force page to be scrollable when keyboard is present */
body:has(.ML__keyboard:not([style*="display: none"])) {
  overflow: auto !important;
  height: auto !important;
  max-height: none !important;
  position: static !important;
}

/* Ensure all containers can scroll */
body:has(.ML__keyboard:not([style*="display: none"])) * {
  max-height: none !important;
}

/* Specific fix for admin page */
body:has(.ML__keyboard:not([style*="display: none"])) .admin-homework-page,
body:has(.ML__keyboard:not([style*="display: none"])) .admin-content {
  overflow-y: auto !important;
  max-height: none !important;
  height: auto !important;
}

/* MathLive cursor styling */
.ML__caret {
  background-color: #3b82f6 !important;
  color: #3b82f6 !important;
  border-color: #3b82f6 !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* Selection highlighting */
.ML__selection {
  background-color: rgba(59, 130, 246, 0.3) !important;
  color: inherit !important;
}

/* Ensure text input is properly styled */
math-field[contenteditable="true"] {
  caret-color: #3b82f6 !important;
  cursor: text !important;
  user-select: text !important;
}

/* Ensure virtual keyboard keys work properly */
.ML__keyboard-key {
  pointer-events: auto !important;
  cursor: pointer !important;
  user-select: none !important;
}

/* Specifically style the backspace key */
.ML__keyboard-key[data-key="Backspace"],
.ML__keyboard-key[title*="backspace"],
.ML__keyboard-key[title*="delete"] {
  pointer-events: auto !important;
  cursor: pointer !important;
  background-color: #ef4444 !important;
  color: white !important;
}

/* Ensure all keyboard interactions work */
.ML__virtual-keyboard * {
  pointer-events: auto !important;
}
